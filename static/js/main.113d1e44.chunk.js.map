{"version":3,"sources":["components/question/Question.js","components/answer/Answer.js","components/QuizMain.js","App.js","reportWebVitals.js","index.js"],"names":["Question","props","question","Answer","answers","Object","keys","answer","map","qAnswer","i","className","correctAnswer","clickedAnswer","onClick","checkAnswer","disabled","Quiz","state","quiestions","1","2","3","correctAnswers","step","score","setState","nextStep","this","length","Component","App","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRASeA,EANE,SAACC,GACd,OACI,6BAAKA,EAAMC,YC+BJC,G,MAjCA,SAACF,GACZ,IAAIG,EAAUC,OAAOC,KAAKL,EAAMM,QAC3BC,KAAI,SAACC,EAASC,GAAV,OACD,oBACAC,UAEIV,EAAMW,gBAAkBH,EACxB,UACAR,EAAMY,gBAAkBJ,EACxB,YAAc,GAElBK,QAAS,kBAAMb,EAAMc,YAAYN,IARjC,SAUKR,EAAMM,OAAOE,IADbA,MAKT,OACI,qCACI,oBAAIO,WAAUf,EAAMY,cAA8BF,UAAU,UAA5D,SACKP,IAEL,8BAEQH,EAAMW,cACN,kBACAX,EAAMY,cAAgB,oBAAsB,UCxB/CI,E,4MAGjBC,MAAQ,CACJC,WAAY,CACRC,EAAG,yBACHC,EAAG,mCACHC,EAAG,6BAEPlB,QAAS,CACLgB,EAAG,CACCA,EAAG,+BACHC,EAAG,8BACHC,EAAG,uBAEPD,EAAG,CACCD,EAAG,UACHC,EAAG,SACHC,EAAG,aAEPA,EAAG,CACCF,EAAG,sBACHC,EAAG,oBACHC,EAAG,sBAGXC,eAAgB,CACZH,EAAG,IACHC,EAAG,IACHC,EAAG,KAEPV,cAAe,EACfC,cAAe,EACfW,KAAM,EACNC,MAAO,G,EAIXV,YAAc,SAAAR,GAAW,IAAD,EACoB,EAAKW,MAArCK,EADY,EACZA,eAAgBC,EADJ,EACIA,KAAMC,EADV,EACUA,MAC3BlB,IAAWgB,EAAeC,GACzB,EAAKE,SAAS,CACVD,MAAOA,EAAQ,EACfb,cAAeW,EAAeC,GAC9BX,cAAeN,IAGnB,EAAKmB,SAAS,CACVd,cAAe,EACfC,cAAeN,K,EAM3BoB,SAAW,SAACH,GACR,EAAKE,SAAS,CACVF,KAAMA,EAAO,EACbZ,cAAe,EACfC,cAAe,K,4CAIvB,WAAS,IAAD,SACqEe,KAAKV,MAAxEC,EADF,EACEA,WAAYf,EADd,EACcA,QAASQ,EADvB,EACuBA,cAAeC,EADtC,EACsCA,cAAeW,EADrD,EACqDA,KAAMC,EAD3D,EAC2DA,MAC/D,OACI,qBAAKd,UAAU,UAAf,SACKa,GAAQnB,OAAOC,KAAKa,GAAYU,OAC5B,qCACG,cAAC,EAAD,CACI3B,SAAUiB,EAAWK,KAEzB,cAAC,EAAD,CACIjB,OAAQH,EAAQoB,GAChBA,KAAMA,EACNT,YAAaa,KAAKb,YAClBH,cAAeA,EACfC,cAAeA,IAEnB,wBACAF,UAAU,WACVK,WACIH,GAAiBR,OAAOC,KAAKa,GAAYU,QAAUL,GAGvDV,QAAS,kBAAM,EAAKa,SAASH,IAN7B,qBAQA,sBAAKb,UAAU,YAAf,UACI,8DACA,gDAAmBc,EAAnB,OAA8BpB,OAAOC,KAAKa,GAAYU,UACtD,oD,GA1FMC,aCSnBC,E,4JARb,WACE,OACE,qBAAKpB,UAAW,MAAhB,SACE,cAAC,EAAD,U,GAJUqB,IAAMF,WCOTG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.113d1e44.chunk.js","sourcesContent":["import React from 'react';\r\n// import './Question.css';\r\n\r\nconst Question = (props) => {\r\n    return (\r\n        <h1>{props.question}</h1>\r\n    );\r\n}\r\n\r\nexport default Question;","import React from 'react';\r\nimport './Answer.css';\r\n\r\nconst Answer = (props) => {\r\n    let answers = Object.keys(props.answer)\r\n        .map((qAnswer, i) => (\r\n            <li\r\n            className=\r\n            {\r\n                props.correctAnswer === qAnswer ?\r\n                'correct' : \r\n                props.clickedAnswer === qAnswer ? \r\n                'incorrect' : ''\r\n            }\r\n            onClick={() => props.checkAnswer(qAnswer)}\r\n            key={qAnswer}>\r\n                {props.answer[qAnswer]}\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <>\r\n                <ul disabled={props.clickedAnswer ? true : false} className=\"Answers\">\r\n                    {answers}\r\n                </ul>\r\n                <div>\r\n                    {\r\n                        props.correctAnswer ?\r\n                        'Correct Answer!' : \r\n                        props.clickedAnswer ? 'Incorrect Answer!' : ''\r\n                    }\r\n                </div>\r\n            </>\r\n        );\r\n}\r\n\r\nexport default Answer;","import React, {Component} from 'react';\r\nimport Question from './question/Question';\r\nimport Answer from './answer/Answer';\r\n// import './QuizMain.css';\r\n\r\nexport default class Quiz extends Component {\r\n\r\n    // initiating the local state\r\n    state = {\r\n        quiestions: {\r\n            1: 'What HTML Stands for\"?',\r\n            2: 'What is the capital of Pakistan?',\r\n            3: 'What does CSS stands for?'\r\n        },\r\n        answers: {\r\n            1: {\r\n                1: 'Hyper Text multiple language',\r\n                2: 'Hyper txet mark-up language',\r\n                3: 'Hyper text language'\r\n            },\r\n            2: {\r\n                1: 'Karachi',\r\n                2: 'Lahore',\r\n                3: 'Islamabad'\r\n            },\r\n            3: {\r\n                1: 'Cascade Style Sheet',\r\n                2: 'Chart style sheet',\r\n                3: 'Cheat Style sheet'\r\n            }\r\n        },\r\n        correctAnswers: {\r\n            1: '2',\r\n            2: '3',\r\n            3: '1'\r\n        },\r\n        correctAnswer: 0,\r\n        clickedAnswer: 0,\r\n        step: 1,\r\n        score: 0\r\n    }\r\n\r\n    // the method that checks the correct answer\r\n    checkAnswer = answer => {\r\n        const { correctAnswers, step, score } = this.state;\r\n        if(answer === correctAnswers[step]){\r\n            this.setState({\r\n                score: score + 1,\r\n                correctAnswer: correctAnswers[step],\r\n                clickedAnswer: answer\r\n            });\r\n        }else{\r\n            this.setState({\r\n                correctAnswer: 0,\r\n                clickedAnswer: answer\r\n            });\r\n        }\r\n    }\r\n\r\n    // method to move to the next question\r\n    nextStep = (step) => {\r\n        this.setState({\r\n            step: step + 1,\r\n            correctAnswer: 0,\r\n            clickedAnswer: 0\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let { quiestions, answers, correctAnswer, clickedAnswer, step, score } = this.state;\r\n        return(\r\n            <div className=\"Content\">\r\n                {step <= Object.keys(quiestions).length ? \r\n                    (<>\r\n                        <Question\r\n                            question={quiestions[step]}\r\n                        />\r\n                        <Answer\r\n                            answer={answers[step]}\r\n                            step={step}\r\n                            checkAnswer={this.checkAnswer}\r\n                            correctAnswer={correctAnswer}\r\n                            clickedAnswer={clickedAnswer}\r\n                        />\r\n                        <button\r\n                        className=\"NextStep\"\r\n                        disabled={\r\n                            clickedAnswer && Object.keys(quiestions).length >= step\r\n                            ? false : true\r\n                        }\r\n                        onClick={() => this.nextStep(step)}>Next</button>\r\n                    </>) : (\r\n                        <div className=\"finalPage\">\r\n                            <h1>You have completed the quiz!</h1>\r\n                            <p>Your score is: {score} of {Object.keys(quiestions).length}</p>\r\n                            <p>Thank you!</p>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react'\nimport './App.css';\nimport Quiz from './components/QuizMain';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className= \"App\">\n        <Quiz />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}